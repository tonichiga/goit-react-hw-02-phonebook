{"version":3,"sources":["Components/ButtonAddContact.module.scss","Components/VisibileContacts.module.scss","Components/InputForm.js","Components/VisibileContacts/VisibileContactsComponent.js","Components/VisibileContacts.js","App.js","reportWebVitals.js","index.js","Components/VisibileContacts/VisibileContactsComponent.module.scss"],"names":["module","exports","InputForm","state","name","number","handleChange","e","target","value","setState","reset","hanldesubmit","preventDefault","props","onSubmit","this","type","onChange","className","s","addButton","Component","ContactElement","deleteContact","id","contactElement","contactWrapper","contactName","contactButton","onClick","VisibileContacts","filter","findContact","contacts","contact","handleContactFinder","findContacts","placeholder","map","list","data","delete","App","formSubmitHandler","newContact","Date","now","find","alert","prevState","contactId","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.953cafbc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"addButton\":\"ButtonAddContact_addButton__MI9Bn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"VisibileContacts_list__3qGLN\"};","import s from './ButtonAddContact.module.scss';\r\nimport { Component } from 'react';\r\n\r\nclass InputForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, number, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n      [number]: value,\r\n    });\r\n  };\r\n\r\n  // Сброс инпутов\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n  hanldesubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.hanldesubmit}>\r\n        <p>Name</p>\r\n        <input\r\n          type=\"text\"\r\n          onChange={this.handleChange}\r\n          value={this.state.name}\r\n          name=\"name\"\r\n        ></input>\r\n        <p>Number</p>\r\n        <input\r\n          type=\"number\"\r\n          onChange={this.handleChange}\r\n          value={this.state.number}\r\n          name=\"number\"\r\n        ></input>\r\n\r\n        <button type=\"submit\" className={s.addButton}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputForm;\r\n","import s from './VisibileContactsComponent.module.scss';\r\n\r\nconst ContactElement = ({ name, number, deleteContact, id }) => {\r\n  return (\r\n    <li className={s.contactElement}>\r\n      <div className={s.contactWrapper}>\r\n        <p className={s.contactName}>{name}</p>\r\n        <p>{number}</p>\r\n      </div>\r\n      <button className={s.contactButton} onClick={() => deleteContact(id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\nexport default ContactElement;\r\n","import { Component } from 'react';\r\nimport ContactElement from './VisibileContacts/';\r\nimport s from './VisibileContacts.module.scss';\r\n\r\nclass VisibileContacts extends Component {\r\n  state = {\r\n    filter: '',\r\n  };\r\n\r\n  findContact = () => {\r\n    const contacts = this.props.contacts;\r\n    const filtered = contacts.filter(\r\n      contact => contact.name === this.state.filter,\r\n    );\r\n    return filtered;\r\n  };\r\n\r\n  handleContactFinder = e => {\r\n    this.setState({\r\n      filter: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const findContacts = this.findContact();\r\n\r\n    return (\r\n      <>\r\n        <h2>Contacts</h2>\r\n        <p>Find contact</p>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"enter name\"\r\n          onChange={this.handleContactFinder}\r\n          value={this.state.filter}\r\n        ></input>\r\n        <p>{findContacts.map(({ name }) => name)}</p>\r\n        <ul className={s.list}>\r\n          {this.props.data.map(data => (\r\n            <ContactElement\r\n              name={data.name}\r\n              number={data.number}\r\n              key={data.id}\r\n              deleteContact={this.props.delete}\r\n              id={data.id}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VisibileContacts;\r\n","import React, { Component } from 'react';\nimport InputForm from './Components/InputForm';\n// import ButtonAddContact from './Components/ButtonAddContact';\nimport VisibileContacts from './Components/VisibileContacts';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  formSubmitHandler = data => {\n    const newContact = {\n      name: data.name,\n      number: data.number,\n      id: Date.now(),\n    };\n\n    const { contacts } = this.state;\n    if (contacts.find(contact => contact.name === newContact.name)) {\n      return alert('такой контакт существует');\n    }\n\n    this.setState(prevState => {\n      return { contacts: [newContact, ...prevState.contacts] };\n    });\n  };\n\n  deleteContact = contactId => {\n    console.log(contactId);\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const data = this.state.contacts;\n\n    return (\n      <div className=\"App\">\n        <h2>Phonebook</h2>\n        <InputForm onSubmit={this.formSubmitHandler} />\n        <VisibileContacts\n          data={data}\n          contacts={this.state.contacts}\n          delete={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactElement\":\"VisibileContactsComponent_contactElement__3t52t\",\"contactName\":\"VisibileContactsComponent_contactName__2Gi27\",\"contactButton\":\"VisibileContactsComponent_contactButton__1iX-1\",\"contactWrapper\":\"VisibileContactsComponent_contactWrapper__3vr-x\"};"],"sourceRoot":""}